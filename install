#!/bin/bash
# Criado por Luciano Ermilivitch, adaptado por Pedro Barcha

# Instala - Curl, Go, Docker, Docker-compose, node, npm, git
# Por fim lista a versao dos pacotes instalados para uma verificacao
preReqs(){
	# Atualizando lista de pacotes
	sudo apt-get update

	# Instalador dos prerequisitos para instalacao do bc
	# Obtendo cURL
	echo Obtendo cURL
	sudo apt-get install curl -y

	# Obtendo GO
	echo Obtendo Go...
	sudo apt-get install golang -y
	## Carregando go no path
	export GOPATH=$HOME/go
	export PATH=$PATH:$GOPATH/bin

	# Obtendo Docker
	echo Obtendo Docker

	# Adicionando o repositorio do docker e suas dependencias
	sudo apt-get install ca-certificates curl gnupg lsb-release -y

	sudo mkdir -p /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

	echo \
	"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
	$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

	sudo apt-get update
	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

	# Obtendo Docker-compose
	echo "Obtendo Docker Compose"
	sudo apt-get install docker-compose -y
	
	echo "Permita que o usuário seja adicionado ao grupo docker..."
	sudo usermod -aG docker ${USER}

	# Obtendo Node
	echo Obtendo Node...
	curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
	sudo apt-get install -y nodejs

	# Obtendo git
	echo Obtendo Git
	sudo apt-get install git -y

	## Validando se a instalacao esta correta
	echo ----------------------
	echo versao do curl:
	curl -V
	echo ---------------------
	echo versao do npm
	npm -v
	echo -----------------
	echo versao do docker
	docker version
	echo ---------------
	echo versao docker-compose
	docker compose version
	echo -----------------
	echo versao do go
	go version
	echo ----------------
	echo versao do python
	python3 -V
	echo ----------
	echo versao do node
	node -v
}

# Função para obtencao do fabricSamples
# colocado em um novo diretorio criado chamado fabricSamples a
# partir do diretorio atual
obtemFabricSamples(){
        # Excluindo estrutura se ja existente
        #echo Excluindo diretorios 
        #sudo rm -r fabricSamples

        # Criando estrutura de diretorios
        echo Criando diretorios
        mkdir fabricSamples
        cd fabricSamples

        # Obtendo os Samples
        echo Obtendo Samples
        curl -sSL https://bit.ly/2ysbOFE | bash -s
}

# Adiciona HFl ao path do usuário
adicionaPath(){
	# BINFABRICPATH=$(pwd)/fabricSamples/fabric-samples/bin
	# PATH="${PATH:+${PATH}:${BINFABRICPATH}}"	
	echo "export PATH=$(pwd)/fabricSamples/fabric-samples/bin:$PATH" >> ~/.bashrc
	echo "HLF adicionado ao path do usuário"
	. ~/.bashrc
}

preReqs
obtemFabricSamples
adicionaPath

echo "Finalizado!"
